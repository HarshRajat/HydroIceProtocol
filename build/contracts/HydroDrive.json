{
  "contractName": "HydroDrive",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "identityRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ice",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "callOnAddition",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "snowflakeDescription",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "snowflakeName",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "callOnRemoval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_snowflakeAddress",
          "type": "address"
        }
      ],
      "name": "setSnowflakeAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "snowflake",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "snowflakeAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onAddition",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onRemoval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "whoEIN",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "debugBuildFS",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"identityRegistry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ice\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"whoEIN\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"callOnAddition\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"snowflakeDescription\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"snowflakeName\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"callOnRemoval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onAddition\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onRemoval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_snowflakeAddress\",\"type\":\"address\"}],\"name\":\"setSnowflakeAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"debugBuildFS\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"snowflake\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"snowflakeAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"Harsh Rajat\",\"details\":\"This Contract forms File Storage / Stamping / Encryption part of Hydro Protocols\",\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Ice Protocol\"},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}},\"notice\":\"Create Protocol Less File Storage, Grouping, Hassle free Encryption / Decryption and Stamping using Snowflake\"}},\"settings\":{\"compilationTarget\":{\"/MAMPWeb/HydroIce/HydroIceContract/contracts/HydroDrive.sol\":\"HydroDrive\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/MAMPWeb/HydroIce/HydroIceContract/contracts/HydroDrive.sol\":{\"keccak256\":\"0x5c5760abb00adcbcacbf648376e6214594df041743ac28c62817b89ed1ed8c32\",\"urls\":[\"bzzr://fcab8f4794e9be6563a3fe34c8ee59b182d0dd68c31a09665dce09b8fd9772e9\"]},\"/MAMPWeb/HydroIce/HydroIceContract/contracts/SnowflakeResolver.sol\":{\"keccak256\":\"0xba1200f806655b37a99b58a1e5b6d36bd09026c3a4d4a05fbc25126281a1c788\",\"urls\":[\"bzzr://76feb72e8a6e8ff908740a42b71427a798aa40c346868c50b7f799cdee903af6\"]},\"/MAMPWeb/HydroIce/HydroIceContract/contracts/interfaces/HydroInterface.sol\":{\"keccak256\":\"0x3f0b755561062d9912aca9a46d728918404fe17a09cfbadfcdd498bdd6fd0b6e\",\"urls\":[\"bzzr://7347515ad9e6891eadd0e635e546a4f2addd7a4121dced0b18104953a1d9b217\"]},\"/MAMPWeb/HydroIce/HydroIceContract/contracts/interfaces/IceInterface.sol\":{\"keccak256\":\"0xe378f52121bfb64e2fd22e71b44062e31d0517650701eeb5dda908617b7e82b7\",\"urls\":[\"bzzr://f87f44df9913d1c209b44671b91cf5ada0c2a191fc2e36076e9188ed466bcb2b\"]},\"/MAMPWeb/HydroIce/HydroIceContract/contracts/interfaces/IdentityRegistryInterface.sol\":{\"keccak256\":\"0xb559191dbd30da97a8b5759a895d7f4eff420eedc55b0786ae7206fbe384dc15\",\"urls\":[\"bzzr://a6122de11af1f831b1a93dba66aabe9e299f0040cf3404510790453addc6e0d9\"]},\"/MAMPWeb/HydroIce/HydroIceContract/contracts/interfaces/SnowflakeInterface.sol\":{\"keccak256\":\"0xb34e22de661c32131d4d5bbd8f8dbf1794e5d944736ccb31870b6f75bdd322e5\",\"urls\":[\"bzzr://aaa6399afaf287d517ece7ac874cf6da3c2d81f9d88cb8cdc4631adc3f4ac52a\"]},\"/MAMPWeb/HydroIce/HydroIceContract/contracts/interfaces/SnowflakeResolverInterface.sol\":{\"keccak256\":\"0x8a5595a41d86f78514dfcd6eaa0ec79482187b8ead1c8c129faab29aeb2aced1\",\"urls\":[\"bzzr://1f741c8e9d50535a1a18c71c689e1e2876cd75e30256273ffeb2b47b72bcbb76\"]},\"/MAMPWeb/HydroIce/HydroIceContract/contracts/zeppelin/ownership/Ownable.sol\":{\"keccak256\":\"0x1fbe7f67d6b8ac1f5aff86a9da41833273e073c47ce1e160f9addd9c64d9ff1d\",\"urls\":[\"bzzr://1a147508938228cad4bbc0f17c66e6d541d8740e8ae521dab377fe1519f801f1\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "464:1641:0:-;;;830:42;809:63;;;;;;;;;;;;;;;;;;;;922:42;895:69;;;;;;;;;;;;;;;;;;;;987:404;8:9:-1;5:2;;;30:1;27;20:12;5:2;987:404:0;432:431:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1126:16:0;;;;;;;;;;;1144:5;1151;536:10:17;527:6;;:19;;;;;;;;;;;;;;;;;;594:6;;;;;;;;;;;561:40;;590:1;561:40;;;;;;;;;;;;656:14:4;640:13;:30;;;;;;;;;;;;:::i;:::-;;703:21;680:20;:44;;;;;;;;;;;;:::i;:::-;;735:38;755:17;735:19;;;:38;;;:::i;:::-;801:15;784:14;;:32;;;;;;;;;;;;;;;;;;842:14;826:13;;:30;;;;;;;;;;;;;;;;;;432:431;;;;;1224:10:0;;;;;;;;;;;1205:3;;:30;;;;;;;;;;;;;;;;;;1276:16;;;;;;;;;;;1245:9;;:48;;;;;;;;;;;;;;;;;;1348:9;;;;;;;;;;;:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1348:35:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1348:35:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1348:35:0;;;;;;;;;;;;;;;;1303:16;;:81;;;;;;;;;;;;;;;;;;464:1641;;1121:126:4;870:9:17;:7;;;:9;;;:::i;:::-;862:18;;;;;;;;1223:17:4;1204:16;;:36;;;;;;;;;;;;;;;;;;1121:126;:::o;984:89:17:-;1023:4;1060:6;;;;;;;;;;;1046:20;;:10;:20;;;1039:27;;984:89;:::o;464:1641:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "464:1641:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;658:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;658:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;588:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;588:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1740:172;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1740:172:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1346:137:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1346:137:17;;;;;;368:26:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;368:26:4;;;;;;;;;;;;;;;;;;;;;;;;;;;289:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;289:34:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;289:34:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;256:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;256:27:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;256:27:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:76:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;669:76:17;;;;;;;;;;;;;;;;;;;;;;;;;;;400:25:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;400:25:4;;;;;;;;;;;;;;;;;;;;;;;;;;;984:89:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;984:89:17;;;;;;;;;;;;;;;;;;;;;;;;;;;1401:173:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1401:173:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1401:173:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1401:173:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1401:173:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1401:173:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1401:173:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1580:150;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1580:150:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1580:150:0;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1580:150:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1580:150:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1580:150:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1580:150:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1121:126:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1121:126:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1121:126:4;;;;;;;;;;;;;;;;;;;;;;1998:104:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1998:104:0;;;;;;1651:107:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1651:107:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1651:107:17;;;;;;;;;;;;;;;;;;;;;;617:35:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;617:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;330:31:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;330:31:4;;;;;;;;;;;;;;;;;;;;;;;;;;;658:49:0;;;;;;;;;;;;;:::o;588:23::-;;;;;;;;;;;;;:::o;1740:172::-;1787:7;1796;1836:16;;;;;;;;;;;:23;;;1860:10;1836:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1836:35:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1836:35:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1836:35:0;;;;;;;;;;;;;;;;1885:10;1815:90;;;;;;;1740:172;;:::o;1346:137:17:-;870:9;:7;:9::i;:::-;862:18;;;;;;;;1444:1;1407:40;;1428:6;;;;;;;;;;;1407:40;;;;;;;;;;;;1474:1;1457:6;;:19;;;;;;;;;;;;;;;;;;1346:137::o;368:26:4:-;;;;;;;;;;;;;:::o;289:34::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;256:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;669:76:17:-;706:7;732:6;;;;;;;;;;;725:13;;669:76;:::o;400:25:4:-;;;;;;;;;;;;;:::o;984:89:17:-;1023:4;1060:6;;;;;;;;;;;1046:20;;:10;:20;;;1039:27;;984:89;:::o;1401:173:0:-;1540:4;930:16:4;;;;;;;;;;;916:30;;:10;:30;;;908:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1563:4:0;1556:11;;1401:173;;;;;:::o;1580:150::-;1696:4;930:16:4;;;;;;;;;;;916:30;;:10;:30;;;908:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1719:4:0;1712:11;;1580:150;;;;:::o;1121:126:4:-;870:9:17;:7;:9::i;:::-;862:18;;;;;;;;1223:17:4;1204:16;;:36;;;;;;;;;;;;;;;;;;1121:126;:::o;1998:104:0:-;2068:3;;;;;;;;;;;:15;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2068:27:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2068:27:0;;;;1998:104::o;1651:107:17:-;870:9;:7;:9::i;:::-;862:18;;;;;;;;1723:28;1742:8;1723:18;:28::i;:::-;1651:107;:::o;617:35:0:-;;;;;;;;;;;;;:::o;330:31:4:-;;;;;;;;;;;;;:::o;1899:183:17:-;1992:1;1972:22;;:8;:22;;;;1964:31;;;;;;;;2039:8;2010:38;;2031:6;;;;;;;;;;;2010:38;;;;;;;;;;;;2067:8;2058:6;;:17;;;;;;;;;;;;;;;;;;1899:183;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./SnowflakeResolver.sol\";\n\nimport \"./interfaces/SnowflakeInterface.sol\";\nimport \"./interfaces/IdentityRegistryInterface.sol\";\nimport \"./interfaces/IceInterface.sol\";\n\n/**\n * @title Ice Protocol\n * @author Harsh Rajat\n * @notice Create Protocol Less File Storage, Grouping, Hassle free Encryption / Decryption and Stamping using Snowflake\n * @dev This Contract forms File Storage / Stamping / Encryption part of Hydro Protocols\n */\ncontract HydroDrive is SnowflakeResolver {\n    /* for referencing Ice, SnowFlake, Identity Registry (ERC-1484).\n     */\n    IceInterface public ice;\n    SnowflakeInterface public snowflake;\n    IdentityRegistryInterface public identityRegistry;\n\n\n    /* ***************\n    * DEFINE CONSTRUCTORS AND RELATED FUNCTIONS\n    *************** */\n    address IceAddress = 0x143c43180cAE3EF019cD915b3059BCe5AC177538; // For local use\n    address snowflakeAddress = 0xcF1877AC788a303cAcbbfE21b4E8AD08139f54FA; // For local use\n    constructor (/*address IceAddress, address snowflakeAddress*/) public \n    SnowflakeResolver(\"Hydro Drive\", \"File Storage and Management\", snowflakeAddress, false, false) {\n        // Reference Hydro Protocols\n        ice = IceInterface(IceAddress);\n        snowflake = SnowflakeInterface(snowflakeAddress);\n        identityRegistry = IdentityRegistryInterface(snowflake.identityRegistryAddress());\n    }\n    \n    function onAddition(uint /* ein */, uint /* allowance */, bytes memory /* extraData */) \n    public \n    senderIsSnowflake() \n    returns (bool) {\n        return true;\n    }\n\n    function onRemoval(uint /* ein */, bytes memory /* extraData */) \n    public \n    senderIsSnowflake() \n    returns (bool) {\n        return true;\n    }\n    \n    function whoEIN()\n    public view\n    returns (uint256, address) {\n        return (\n            identityRegistry.getEIN(msg.sender),\n            msg.sender\n        );\n    }\n\n    // *. FOR DEBUGGING CONTRACT\n    // To Build Groups & File System for users\n    function debugBuildFS()\n    public {\n        // Create Groups\n        ice.createGroup(\"A.Images\");\n    }\n\n}\n",
  "sourcePath": "/MAMPWeb/HydroIce/HydroIceContract/contracts/HydroDrive.sol",
  "ast": {
    "absolutePath": "/MAMPWeb/HydroIce/HydroIceContract/contracts/HydroDrive.sol",
    "exportedSymbols": {
      "HydroDrive": [
        108
      ]
    },
    "id": 109,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/MAMPWeb/HydroIce/HydroIceContract/contracts/SnowflakeResolver.sol",
        "file": "./SnowflakeResolver.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 109,
        "sourceUnit": 6086,
        "src": "25:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/MAMPWeb/HydroIce/HydroIceContract/contracts/interfaces/SnowflakeInterface.sol",
        "file": "./interfaces/SnowflakeInterface.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 109,
        "sourceUnit": 7162,
        "src": "60:45:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/MAMPWeb/HydroIce/HydroIceContract/contracts/interfaces/IdentityRegistryInterface.sol",
        "file": "./interfaces/IdentityRegistryInterface.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 109,
        "sourceUnit": 6865,
        "src": "106:52:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/MAMPWeb/HydroIce/HydroIceContract/contracts/interfaces/IceInterface.sol",
        "file": "./interfaces/IceInterface.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 109,
        "sourceUnit": 6597,
        "src": "159:39:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "SnowflakeResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6085,
              "src": "487:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SnowflakeResolver_$6085",
                "typeString": "contract SnowflakeResolver"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "487:17:0"
          }
        ],
        "contractDependencies": [
          6085,
          7866
        ],
        "contractKind": "contract",
        "documentation": "@title Ice Protocol\n@author Harsh Rajat\n@notice Create Protocol Less File Storage, Grouping, Hassle free Encryption / Decryption and Stamping using Snowflake\n@dev This Contract forms File Storage / Stamping / Encryption part of Hydro Protocols",
        "fullyImplemented": true,
        "id": 108,
        "linearizedBaseContracts": [
          108,
          6085,
          7866
        ],
        "name": "HydroDrive",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9,
            "name": "ice",
            "nodeType": "VariableDeclaration",
            "scope": 108,
            "src": "588:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IceInterface_$6596",
              "typeString": "contract IceInterface"
            },
            "typeName": {
              "contractScope": null,
              "id": 8,
              "name": "IceInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6596,
              "src": "588:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IceInterface_$6596",
                "typeString": "contract IceInterface"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "name": "snowflake",
            "nodeType": "VariableDeclaration",
            "scope": 108,
            "src": "617:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SnowflakeInterface_$7161",
              "typeString": "contract SnowflakeInterface"
            },
            "typeName": {
              "contractScope": null,
              "id": 10,
              "name": "SnowflakeInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7161,
              "src": "617:18:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SnowflakeInterface_$7161",
                "typeString": "contract SnowflakeInterface"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "name": "identityRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 108,
            "src": "658:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IdentityRegistryInterface_$6864",
              "typeString": "contract IdentityRegistryInterface"
            },
            "typeName": {
              "contractScope": null,
              "id": 12,
              "name": "IdentityRegistryInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6864,
              "src": "658:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IdentityRegistryInterface_$6864",
                "typeString": "contract IdentityRegistryInterface"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16,
            "name": "IceAddress",
            "nodeType": "VariableDeclaration",
            "scope": 108,
            "src": "809:63:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 14,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "809:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307831343363343331383063414533454630313963443931356233303539424365354143313737353338",
              "id": 15,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "830:42:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x143c43180cAE3EF019cD915b3059BCe5AC177538"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 19,
            "name": "snowflakeAddress",
            "nodeType": "VariableDeclaration",
            "scope": 108,
            "src": "895:69:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 17,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "895:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307863463138373741433738386133303363416362626645323162344538414430383133396635344641",
              "id": 18,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "922:42:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0xcF1877AC788a303cAcbbfE21b4E8AD08139f54FA"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 49,
              "nodeType": "Block",
              "src": "1158:233:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 29,
                      "name": "ice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "1205:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IceInterface_$6596",
                        "typeString": "contract IceInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 31,
                          "name": "IceAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "1224:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 30,
                        "name": "IceInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6596,
                        "src": "1211:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IceInterface_$6596_$",
                          "typeString": "type(contract IceInterface)"
                        }
                      },
                      "id": 32,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1211:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IceInterface_$6596",
                        "typeString": "contract IceInterface"
                      }
                    },
                    "src": "1205:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IceInterface_$6596",
                      "typeString": "contract IceInterface"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "1205:30:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 35,
                      "name": "snowflake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1245:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SnowflakeInterface_$7161",
                        "typeString": "contract SnowflakeInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 37,
                          "name": "snowflakeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1276:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 36,
                        "name": "SnowflakeInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7161,
                        "src": "1257:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SnowflakeInterface_$7161_$",
                          "typeString": "type(contract SnowflakeInterface)"
                        }
                      },
                      "id": 38,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1257:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SnowflakeInterface_$7161",
                        "typeString": "contract SnowflakeInterface"
                      }
                    },
                    "src": "1245:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SnowflakeInterface_$7161",
                      "typeString": "contract SnowflakeInterface"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "1245:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 41,
                      "name": "identityRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1303:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IdentityRegistryInterface_$6864",
                        "typeString": "contract IdentityRegistryInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 43,
                              "name": "snowflake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "1348:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SnowflakeInterface_$7161",
                                "typeString": "contract SnowflakeInterface"
                              }
                            },
                            "id": 44,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "identityRegistryAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6887,
                            "src": "1348:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () external returns (address)"
                            }
                          },
                          "id": 45,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1348:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 42,
                        "name": "IdentityRegistryInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6864,
                        "src": "1322:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IdentityRegistryInterface_$6864_$",
                          "typeString": "type(contract IdentityRegistryInterface)"
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1322:62:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IdentityRegistryInterface_$6864",
                        "typeString": "contract IdentityRegistryInterface"
                      }
                    },
                    "src": "1303:81:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdentityRegistryInterface_$6864",
                      "typeString": "contract IdentityRegistryInterface"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "1303:81:0"
                }
              ]
            },
            "documentation": null,
            "id": 50,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "487964726f204472697665",
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1080:13:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_33e699a8842802ea2b6b1ec0860e91c987e2cc5c1d85ff325e05d2d354c197c3",
                      "typeString": "literal_string \"Hydro Drive\""
                    },
                    "value": "Hydro Drive"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "46696c652053746f7261676520616e64204d616e6167656d656e74",
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1095:29:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b71c57e2eea226339b28fcf176cb7248d47b719e42e8ef658905a9f7432878d9",
                      "typeString": "literal_string \"File Storage and Management\""
                    },
                    "value": "File Storage and Management"
                  },
                  {
                    "argumentTypes": null,
                    "id": 24,
                    "name": "snowflakeAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "1126:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1144:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1151:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  }
                ],
                "id": 27,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 21,
                  "name": "SnowflakeResolver",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6085,
                  "src": "1062:17:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_SnowflakeResolver_$6085_$",
                    "typeString": "type(contract SnowflakeResolver)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1062:95:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "999:50:0"
            },
            "returnParameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1158:0:0"
            },
            "scope": 108,
            "src": "987:404:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "1546:28:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1563:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 62,
                  "id": 64,
                  "nodeType": "Return",
                  "src": "1556:11:0"
                }
              ]
            },
            "documentation": null,
            "id": 66,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 59,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 58,
                  "name": "senderIsSnowflake",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5912,
                  "src": "1506:17:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1506:19:0"
              }
            ],
            "name": "onAddition",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "1421:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "1437:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1437:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "1459:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1459:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1420:68:0"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "1540:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1540:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1539:6:0"
            },
            "scope": 108,
            "src": "1401:173:0",
            "stateMutability": "nonpayable",
            "superFunction": 5935,
            "visibility": "public"
          },
          {
            "body": {
              "id": 79,
              "nodeType": "Block",
              "src": "1702:28:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1719:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 76,
                  "id": 78,
                  "nodeType": "Return",
                  "src": "1712:11:0"
                }
              ]
            },
            "documentation": null,
            "id": 80,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 73,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 72,
                  "name": "senderIsSnowflake",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5912,
                  "src": "1662:17:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1662:19:0"
              }
            ],
            "name": "onRemoval",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "1599:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1599:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "1615:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1615:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1598:46:0"
            },
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "1696:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1696:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1695:6:0"
            },
            "scope": 108,
            "src": "1580:150:0",
            "stateMutability": "nonpayable",
            "superFunction": 5944,
            "visibility": "public"
          },
          {
            "body": {
              "id": 96,
              "nodeType": "Block",
              "src": "1805:107:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 89,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7881,
                              "src": "1860:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 90,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1860:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 87,
                            "name": "identityRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "1836:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IdentityRegistryInterface_$6864",
                              "typeString": "contract IdentityRegistryInterface"
                            }
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getEIN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6634,
                          "src": "1836:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1836:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 92,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7881,
                          "src": "1885:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 93,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1885:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "id": 94,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1822:83:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_address_payable_$",
                      "typeString": "tuple(uint256,address payable)"
                    }
                  },
                  "functionReturnParameters": 86,
                  "id": 95,
                  "nodeType": "Return",
                  "src": "1815:90:0"
                }
              ]
            },
            "documentation": null,
            "id": 97,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "whoEIN",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1755:2:0"
            },
            "returnParameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1787:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1787:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1796:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1796:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1786:18:0"
            },
            "scope": 108,
            "src": "1740:172:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "2033:69:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "412e496d61676573",
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2084:10:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_edec36fea20beebba4aa3eb314f3aec943de2cc8039d3b8d964a818798eff314",
                          "typeString": "literal_string \"A.Images\""
                        },
                        "value": "A.Images"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_edec36fea20beebba4aa3eb314f3aec943de2cc8039d3b8d964a818798eff314",
                          "typeString": "literal_string \"A.Images\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 100,
                        "name": "ice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "2068:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IceInterface_$6596",
                          "typeString": "contract IceInterface"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createGroup",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6537,
                      "src": "2068:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) external"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2068:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "2068:27:0"
                }
              ]
            },
            "documentation": null,
            "id": 107,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "debugBuildFS",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2019:2:0"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2033:0:0"
            },
            "scope": 108,
            "src": "1998:104:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 109,
        "src": "464:1641:0"
      }
    ],
    "src": "0:2106:0"
  },
  "legacyAST": {
    "absolutePath": "/MAMPWeb/HydroIce/HydroIceContract/contracts/HydroDrive.sol",
    "exportedSymbols": {
      "HydroDrive": [
        108
      ]
    },
    "id": 109,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/MAMPWeb/HydroIce/HydroIceContract/contracts/SnowflakeResolver.sol",
        "file": "./SnowflakeResolver.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 109,
        "sourceUnit": 6086,
        "src": "25:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/MAMPWeb/HydroIce/HydroIceContract/contracts/interfaces/SnowflakeInterface.sol",
        "file": "./interfaces/SnowflakeInterface.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 109,
        "sourceUnit": 7162,
        "src": "60:45:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/MAMPWeb/HydroIce/HydroIceContract/contracts/interfaces/IdentityRegistryInterface.sol",
        "file": "./interfaces/IdentityRegistryInterface.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 109,
        "sourceUnit": 6865,
        "src": "106:52:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/MAMPWeb/HydroIce/HydroIceContract/contracts/interfaces/IceInterface.sol",
        "file": "./interfaces/IceInterface.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 109,
        "sourceUnit": 6597,
        "src": "159:39:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "SnowflakeResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6085,
              "src": "487:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SnowflakeResolver_$6085",
                "typeString": "contract SnowflakeResolver"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "487:17:0"
          }
        ],
        "contractDependencies": [
          6085,
          7866
        ],
        "contractKind": "contract",
        "documentation": "@title Ice Protocol\n@author Harsh Rajat\n@notice Create Protocol Less File Storage, Grouping, Hassle free Encryption / Decryption and Stamping using Snowflake\n@dev This Contract forms File Storage / Stamping / Encryption part of Hydro Protocols",
        "fullyImplemented": true,
        "id": 108,
        "linearizedBaseContracts": [
          108,
          6085,
          7866
        ],
        "name": "HydroDrive",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9,
            "name": "ice",
            "nodeType": "VariableDeclaration",
            "scope": 108,
            "src": "588:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IceInterface_$6596",
              "typeString": "contract IceInterface"
            },
            "typeName": {
              "contractScope": null,
              "id": 8,
              "name": "IceInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6596,
              "src": "588:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IceInterface_$6596",
                "typeString": "contract IceInterface"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "name": "snowflake",
            "nodeType": "VariableDeclaration",
            "scope": 108,
            "src": "617:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SnowflakeInterface_$7161",
              "typeString": "contract SnowflakeInterface"
            },
            "typeName": {
              "contractScope": null,
              "id": 10,
              "name": "SnowflakeInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7161,
              "src": "617:18:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SnowflakeInterface_$7161",
                "typeString": "contract SnowflakeInterface"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "name": "identityRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 108,
            "src": "658:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IdentityRegistryInterface_$6864",
              "typeString": "contract IdentityRegistryInterface"
            },
            "typeName": {
              "contractScope": null,
              "id": 12,
              "name": "IdentityRegistryInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6864,
              "src": "658:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IdentityRegistryInterface_$6864",
                "typeString": "contract IdentityRegistryInterface"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16,
            "name": "IceAddress",
            "nodeType": "VariableDeclaration",
            "scope": 108,
            "src": "809:63:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 14,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "809:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307831343363343331383063414533454630313963443931356233303539424365354143313737353338",
              "id": 15,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "830:42:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x143c43180cAE3EF019cD915b3059BCe5AC177538"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 19,
            "name": "snowflakeAddress",
            "nodeType": "VariableDeclaration",
            "scope": 108,
            "src": "895:69:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 17,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "895:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307863463138373741433738386133303363416362626645323162344538414430383133396635344641",
              "id": 18,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "922:42:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0xcF1877AC788a303cAcbbfE21b4E8AD08139f54FA"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 49,
              "nodeType": "Block",
              "src": "1158:233:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 29,
                      "name": "ice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "1205:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IceInterface_$6596",
                        "typeString": "contract IceInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 31,
                          "name": "IceAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "1224:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 30,
                        "name": "IceInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6596,
                        "src": "1211:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IceInterface_$6596_$",
                          "typeString": "type(contract IceInterface)"
                        }
                      },
                      "id": 32,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1211:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IceInterface_$6596",
                        "typeString": "contract IceInterface"
                      }
                    },
                    "src": "1205:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IceInterface_$6596",
                      "typeString": "contract IceInterface"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "1205:30:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 35,
                      "name": "snowflake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1245:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SnowflakeInterface_$7161",
                        "typeString": "contract SnowflakeInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 37,
                          "name": "snowflakeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1276:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 36,
                        "name": "SnowflakeInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7161,
                        "src": "1257:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SnowflakeInterface_$7161_$",
                          "typeString": "type(contract SnowflakeInterface)"
                        }
                      },
                      "id": 38,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1257:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SnowflakeInterface_$7161",
                        "typeString": "contract SnowflakeInterface"
                      }
                    },
                    "src": "1245:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SnowflakeInterface_$7161",
                      "typeString": "contract SnowflakeInterface"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "1245:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 41,
                      "name": "identityRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1303:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IdentityRegistryInterface_$6864",
                        "typeString": "contract IdentityRegistryInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 43,
                              "name": "snowflake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "1348:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SnowflakeInterface_$7161",
                                "typeString": "contract SnowflakeInterface"
                              }
                            },
                            "id": 44,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "identityRegistryAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6887,
                            "src": "1348:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () external returns (address)"
                            }
                          },
                          "id": 45,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1348:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 42,
                        "name": "IdentityRegistryInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6864,
                        "src": "1322:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IdentityRegistryInterface_$6864_$",
                          "typeString": "type(contract IdentityRegistryInterface)"
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1322:62:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IdentityRegistryInterface_$6864",
                        "typeString": "contract IdentityRegistryInterface"
                      }
                    },
                    "src": "1303:81:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdentityRegistryInterface_$6864",
                      "typeString": "contract IdentityRegistryInterface"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "1303:81:0"
                }
              ]
            },
            "documentation": null,
            "id": 50,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "487964726f204472697665",
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1080:13:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_33e699a8842802ea2b6b1ec0860e91c987e2cc5c1d85ff325e05d2d354c197c3",
                      "typeString": "literal_string \"Hydro Drive\""
                    },
                    "value": "Hydro Drive"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "46696c652053746f7261676520616e64204d616e6167656d656e74",
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1095:29:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b71c57e2eea226339b28fcf176cb7248d47b719e42e8ef658905a9f7432878d9",
                      "typeString": "literal_string \"File Storage and Management\""
                    },
                    "value": "File Storage and Management"
                  },
                  {
                    "argumentTypes": null,
                    "id": 24,
                    "name": "snowflakeAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "1126:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1144:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1151:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  }
                ],
                "id": 27,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 21,
                  "name": "SnowflakeResolver",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6085,
                  "src": "1062:17:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_SnowflakeResolver_$6085_$",
                    "typeString": "type(contract SnowflakeResolver)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1062:95:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "999:50:0"
            },
            "returnParameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1158:0:0"
            },
            "scope": 108,
            "src": "987:404:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "1546:28:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1563:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 62,
                  "id": 64,
                  "nodeType": "Return",
                  "src": "1556:11:0"
                }
              ]
            },
            "documentation": null,
            "id": 66,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 59,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 58,
                  "name": "senderIsSnowflake",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5912,
                  "src": "1506:17:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1506:19:0"
              }
            ],
            "name": "onAddition",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "1421:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "1437:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1437:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "1459:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1459:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1420:68:0"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "1540:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1540:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1539:6:0"
            },
            "scope": 108,
            "src": "1401:173:0",
            "stateMutability": "nonpayable",
            "superFunction": 5935,
            "visibility": "public"
          },
          {
            "body": {
              "id": 79,
              "nodeType": "Block",
              "src": "1702:28:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1719:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 76,
                  "id": 78,
                  "nodeType": "Return",
                  "src": "1712:11:0"
                }
              ]
            },
            "documentation": null,
            "id": 80,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 73,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 72,
                  "name": "senderIsSnowflake",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5912,
                  "src": "1662:17:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1662:19:0"
              }
            ],
            "name": "onRemoval",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "1599:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1599:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "1615:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1615:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1598:46:0"
            },
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "1696:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1696:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1695:6:0"
            },
            "scope": 108,
            "src": "1580:150:0",
            "stateMutability": "nonpayable",
            "superFunction": 5944,
            "visibility": "public"
          },
          {
            "body": {
              "id": 96,
              "nodeType": "Block",
              "src": "1805:107:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 89,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7881,
                              "src": "1860:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 90,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1860:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 87,
                            "name": "identityRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "1836:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IdentityRegistryInterface_$6864",
                              "typeString": "contract IdentityRegistryInterface"
                            }
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getEIN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6634,
                          "src": "1836:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1836:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 92,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7881,
                          "src": "1885:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 93,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1885:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "id": 94,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1822:83:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_address_payable_$",
                      "typeString": "tuple(uint256,address payable)"
                    }
                  },
                  "functionReturnParameters": 86,
                  "id": 95,
                  "nodeType": "Return",
                  "src": "1815:90:0"
                }
              ]
            },
            "documentation": null,
            "id": 97,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "whoEIN",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1755:2:0"
            },
            "returnParameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1787:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1787:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1796:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1796:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1786:18:0"
            },
            "scope": 108,
            "src": "1740:172:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "2033:69:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "412e496d61676573",
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2084:10:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_edec36fea20beebba4aa3eb314f3aec943de2cc8039d3b8d964a818798eff314",
                          "typeString": "literal_string \"A.Images\""
                        },
                        "value": "A.Images"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_edec36fea20beebba4aa3eb314f3aec943de2cc8039d3b8d964a818798eff314",
                          "typeString": "literal_string \"A.Images\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 100,
                        "name": "ice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "2068:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IceInterface_$6596",
                          "typeString": "contract IceInterface"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createGroup",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6537,
                      "src": "2068:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) external"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2068:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "2068:27:0"
                }
              ]
            },
            "documentation": null,
            "id": 107,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "debugBuildFS",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2019:2:0"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2033:0:0"
            },
            "scope": 108,
            "src": "1998:104:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 109,
        "src": "464:1641:0"
      }
    ],
    "src": "0:2106:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-05-08T14:08:07.496Z",
  "devdoc": {
    "author": "Harsh Rajat",
    "details": "This Contract forms File Storage / Stamping / Encryption part of Hydro Protocols",
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "Ice Protocol"
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    },
    "notice": "Create Protocol Less File Storage, Grouping, Hassle free Encryption / Decryption and Stamping using Snowflake"
  }
}